import edu.duke.*;

public class CaesarBreaker {
	//countLetters, maxIndex, and decrypt
	//we assume that e is the most frequent letter in any text,
	//and e's index is 4 , "abcde"
	CaesarCipher cc = new CaesarCipher();
	//String message = cc.encrypt(encrypted, 26 - key);
	String alphabet = "abcdefghijklmnopqrstuvwxyz";
	
	public int[] countLetters(String s){
		int[] counts = new int[26];
		for(int i = 0; i < s.length(); i++){
			int idx = alphabet.indexOf(Character.toLowerCase((s.charAt(i))));
			if(idx != -1){
				counts[idx] += 1;
			}
		}
		return counts;
	};
	
	public int maxIndex(int[] a){
		int maxIdx = -1;
		int max = 0;
		for(int i = 0; i<a.length;i++){
			if(a[i] > max){
				maxIdx = i;
			}
		}
		return maxIdx;
	}
	
	public String decrypt(String encryptedMsg, int encryptionKey){
		int dKey = 26 - encryptionKey;
		return cc.encrypt(encryptedMsg, dKey);
	}
	
	//works..
	public void testDecrypt(){
		FileResource fr = new FileResource();
		String wholeFileString = fr.asString();
		wholeFileString = cc.encrypt(wholeFileString, 8);
		System.out.println("The decrypted message is "+ decrypt(wholeFileString,8));
	}
	
	/*This method should return a new String that is every other character 
		from message starting with the start position
	 */
	public String halfOfString(String message, int start){
		String newS = "";
		for(int i = start; i < message.length(); i += 2){
			newS += message.substring(i,i+1);
		}
		return newS;
	}
	
	public void testHalfOfString(){
		String test1 = "hello my name is Raymond";
		String test2 = "hello my name is Edmond";
		String test3 = "abcd abcd abcd abcd abcd";
		System.out.println(halfOfString(test1,0) + " and " +halfOfString(test1,1) );
		System.out.println(halfOfString(test2,3) + " and " + halfOfString(test2,4));
		System.out.println(halfOfString(test3,4) + " and " + halfOfString(test3,5));
	}
	
	
	
}
