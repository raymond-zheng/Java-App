import java.util.*;
import edu.duke.*;

public class VigenereBreaker {
	//OK..
    public String sliceString(String message, int whichSlice, int totalSlices) {
        //REPLACE WITH YOUR CODE
    	String temp = "";
    	for(int i = whichSlice; i < message.length(); i += totalSlices){
    		temp += message.substring(i, i+1);
    	}
    	
        return temp;
    }

    //OK..
    public int[] tryKeyLength(String encrypted, int klength, char mostCommon) {
        int[] key = new int[klength];
        //by default the most common character is 'e'..
        CaesarCracker cc = new CaesarCracker(mostCommon);
        for(int i = 0; i < klength; i ++){
        	String temp = sliceString(encrypted, i, klength);
        	key[i] = cc.getKey(temp);
        }
        //WRITE YOUR CODE HERE
        return key;
    }

    //OK..
    public void breakVigenere () {
    	//default constructor.. 
    	FileResource fr = new FileResource();
    	String s = fr.asString();
    	//using 5 as klength and 'e' as most common for now
    	
    	
    	FileResource frDic = new FileResource("data/Encryption/English");
    	HashSet<String> commonWords = readDictionary(frDic);
//    	int key[] = tryKeyLength(s,4,'e');
//    	VigenereCipher vc = new VigenereCipher(key);
    	System.out.println(breakForLanguage(s,commonWords));
    	//System.out.println(vc.decrypt(s));
    }
    
    //extension 1 
    public HashSet<String> readDictionary(FileResource fr){
    	HashSet<String> hs = new HashSet<String>();
    	for(String s: fr.lines()){
    		if(!hs.contains(s)){
    			hs.add(s);
    		}
    	}
    	return hs;
    }
    
    public int countWords(String message, HashSet<String> dictionary){
    	String[] array = message.split("\\W+");
    	int c = 0;
    	//do not have to use indexing for loop
//    	for(int i = 0; i < array.length; i ++ ){
//    		
//    	}
    	//use this simplified for loop instead
    	for(String s: array){
    		String word = s.toLowerCase();
    		if(dictionary.contains(word)){
    			c ++;
    		}
    	}
    	return c;
    }
    
    public String  breakForLanguage(String encrypted, HashSet<String> dictionary){
    	int max = -1;
    	int keyLength = -1;
    	for(int i = 1; i < 100; i++){
    		System.out.println(i);
    		int[] keys = tryKeyLength(encrypted, i, 'e');
    		VigenereCipher vc = new VigenereCipher(keys);
    		String decryptedCandidate = vc.decrypt(encrypted);
    		int currentCount = countWords(decryptedCandidate,dictionary);
    		if(currentCount > max){
    			max = currentCount;
    			keyLength = i;
    		}
    	}
    	System.out.println("The keys length being used is : ");
    	System.out.println(keyLength);
    	System.out.println("The keys being used are " + tryKeyLength(encrypted,keyLength,'e'));
    	VigenereCipher vc = new VigenereCipher(tryKeyLength(encrypted,keyLength, 'e')); 
    	return vc.decrypt(encrypted);
    }
    
    
    
    
    
    
}
