
/**
 * Abstract class AbstractMarkovModel - write a description of the class here
 * 
 * @author (your name here)
 * @version (version number or date here)
 */

import java.util.*;

public abstract class AbstractMarkovModel implements IMarkovModel {
    protected String myText;
    protected Random myRandom;
    
    public AbstractMarkovModel() {
        myRandom = new Random();
    }
    
    public void setTraining(String s) {
        myText = s.trim();
    }
    

    
    //protected means that this method cannot be modified at children classes 
    protected ArrayList<String> getFollows(String key){ 
		ArrayList<String> follows = new ArrayList<String>();
		int pos = 0;
		while(pos < myText.length()){
			int idx = myText.indexOf(key,pos);
			if(idx == -1){
				break;
			}
			if(idx + key.length() >= myText.length()){
				break;
			}
			follows.add(myText.substring(idx+key.length(), idx +key.length() +1));
			pos = idx + key.length();
				
		}
		return follows;
	}
 
    abstract public String getRandomText(int numChars);
    
    

}
