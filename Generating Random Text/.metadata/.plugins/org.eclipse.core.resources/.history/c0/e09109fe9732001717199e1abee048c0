import java.util.ArrayList;
import java.util.HashMap;
import java.util.Random;

public class EfficientMarkovModel extends AbstractMarkovModel{

	private int N;
	private HashMap <String, ArrayList<String>> hm;
	
	public EfficientMarkovModel(int n) {
		myRandom = new Random();
		N = n;
		hm = new HashMap <String, ArrayList<String>> ();
	}
	
	
	public String getRandomText(int numChars){
		if (myText == null){
			return "";
		}
		StringBuilder sb = new StringBuilder();
		int idx = myRandom.nextInt(myText.length() - N);
		String key = myText.substring(idx, idx + N);
		if(!hm.containsKey(key)){
			ArrayList<String> al = new ArrayList<String> ();
			hm.put(key, al);
		}
		sb.append(key);
		
		
		
		
		//already append N characters before the for loop
		for(int  i = 0 ; i < numChars - N  ; i ++){
			if(hm.containsKey(key)){
				ArrayList<String> follows = hm.get(key);
			}else{
				ArrayList<String> follows = getFollows(key);
				hm.put(key, follows);
			}
			if(follows.size() == 0){
				break;
			}
			idx = myRandom.nextInt(follows.size());
			String temp = follows.get(idx);
			sb.append(temp);
			//don't use the following line ..
			//key = sb.substring(i-3,i+1);
			//but use the following line instead..
			key = key.substring(1) + temp;
		}
		
		return sb.toString();
	
	}
	
	public String toString(){
		return "Efficient markovModel of order " + N;
	}
	

}
