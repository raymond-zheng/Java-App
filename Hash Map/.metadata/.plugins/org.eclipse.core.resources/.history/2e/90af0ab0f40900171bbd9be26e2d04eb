import edu.duke.*;
import java.util.*;

public class GladLibMap {
	private ArrayList<String> seen;
	private HashMap<String, ArrayList<String>> word;
	private ArrayList<String> option = new ArrayList<String>(Arrays.asList("adjective","noun","color",
			"country","name","animal","time","verb","fruit"));
	private Random myRandom;
	private static String dataSourceURL = "http://dukelearntoprogram.com/course3/data";
	private static String dataSourceDirectory = "data";
	
	public GladLibMap(){
		initializeFromSource(dataSourceDirectory);
		myRandom = new Random();
	}
	
	public GladLibMap(String source){
		initializeFromSource(source);
		myRandom = new Random();
	}
	
	private void initializeFromSource(String source) {
//		adjectiveList= readIt(source+"/adjective.txt");	
//		nounList = readIt(source+"/noun.txt");
//		colorList = readIt(source+"/color.txt");
//		countryList = readIt(source+"/country.txt");
//		nameList = readIt(source+"/name.txt");		
//		animalList = readIt(source+"/animal.txt");
//		timeList = readIt(source+"/timeframe.txt");		
//		verbList = readIt(source+"/verb.txt");
//		fruitList = readIt(source + "/fruit.txt");
		//initializes the ArrayList seen
		for(int i = 0 ; i < option.size(); i ++){
			String curOption = option.get(i);
			word.put(curOption,readIt(source+ "/" + curOption +".tst"));
		}
		seen = new ArrayList<String>();
	}
	
//	private String randomFrom(ArrayList<String> source){
//		int index = myRandom.nextInt(source.size());
//		return source.get(index);
//	}
//	
//	private String getSubstitute(String label) {
//		if (label.equals("country")) {
//			return randomFrom(countryList);
//		}
//		if (label.equals("color")){
//			return randomFrom(colorList);
//		}
//		if (label.equals("noun")){
//			return randomFrom(nounList);
//		}
//		if (label.equals("name")){
//			return randomFrom(nameList);
//		}
//		if (label.equals("adjective")){
//			return randomFrom(adjectiveList);
//		}
//		if (label.equals("animal")){
//			return randomFrom(animalList);
//		}
//		if (label.equals("timeframe")){
//			return randomFrom(timeList);
//		}
//		if (label.equals("number")){
//			return ""+myRandom.nextInt(50)+5;
//		}
//		if (label.equals("verb")){
//			return randomFrom(verbList);
//		}
//		if (label.equals("fruit")){
//			return randomFrom(fruitList);
//		}
//		return "**UNKNOWN**";
//	}
//	
//	//taking each word of the template to process, if a word
//	//contains < and contains > , then find an element from ArrayList to
//	//replace the <XXXX > , else leave it unchanged
//	private String processWord(String w){
//		int first = w.indexOf("<");
//		int last = w.indexOf(">",first);
//		if (first == -1 || last == -1){
//			//unchanged, since < and > are not both found 
//			return w;
//		}
//		// The word is like prefix < XXXX > suffix , thus only
//		//replacing the < XXXX > part
//		String prefix = w.substring(0,first);
//		String suffix = w.substring(last+1);
//		//from first + 1 but not include the last , thus 
//		//eliminating  the < and > in the result
//		//w.substring(first + 1 , last) will be verb/fruit/....
//		String sub = getSubstitute(w.substring(first+1,last));
//		//keep looking for the sub that is unseen
//		while(seen.indexOf(sub) != -1){
//			sub = getSubstitute(w.substring(first+1,last));
//		}
//		//exit while loop, finally found a sub that is not seen and 
//		//adding it to seen
//		seen.add(sub);
//		return prefix+sub+suffix;
//	}
//	
//	private void printOut(String s, int lineWidth){
//		int charsWritten = 0;
//		for(String w : s.split("\\s+")){
//			if (charsWritten + w.length() > lineWidth){
//				System.out.println();
//				charsWritten = 0;
//			}
//			System.out.print(w+" ");
//			charsWritten += w.length() + 1;
//		}
//	}
//	
//	private String fromTemplate(String source){
//		String story = "";
//		if (source.startsWith("http")) {
//			URLResource resource = new URLResource(source);
//			for(String word : resource.words()){
//				story = story + processWord(word) + " ";
//			}
//		}
//		else {
//			FileResource resource = new FileResource(source);
//			for(String word : resource.words()){
//				story = story + processWord(word) + " ";
//			}
//		}
//		return story;
//	}
//	
	private ArrayList<String> readIt(String source){
		ArrayList<String> list = new ArrayList<String>();
		if (source.startsWith("http")) {
			URLResource resource = new URLResource(source);
			for(String line : resource.lines()){
				list.add(line);
			}
		}
		else {
			FileResource resource = new FileResource(source);
			for(String line : resource.lines()){
				list.add(line);
			}
		}
		return list;
	}
//	
//	public void makeStory(){
//		seen.clear();
//	    System.out.println("\n");
//		String story = fromTemplate("data/madtemplate2.txt");
//		printOut(story, 60);
//	}
	


}
